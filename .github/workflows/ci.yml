name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 sortx tests --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 sortx tests --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Format check with black
      run: |
        black --check sortx tests
    
    - name: Import sort check with isort
      run: |
        isort --check-only sortx tests
    
    - name: Type check with mypy
      run: |
        mypy sortx
      continue-on-error: true  # mypy can be strict, make it non-blocking for now
    
    - name: Test with pytest
      run: |
        pytest --cov=sortx --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    
    - name: Build package
      run: |
        python -m build
    
    - name: Test installation
      run: |
        pip install dist/*.whl
        sortx --version
        sortx examples

  integration-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install package
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Test CLI with sample data
      run: |
        # Test CSV sorting
        sortx tests/data/sample.csv -o /tmp/sorted.csv -k price:num --stats
        
        # Test JSONL sorting
        sortx tests/data/sample.jsonl -o /tmp/sorted.jsonl -k age:num --stats
        
        # Test natural sorting
        sortx tests/data/sample.txt -o /tmp/sorted.txt --natural --stats
        
        # Verify output files exist
        test -f /tmp/sorted.csv
        test -f /tmp/sorted.jsonl
        test -f /tmp/sorted.txt
        
        echo "All integration tests passed!"
